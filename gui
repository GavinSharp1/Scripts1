
wait()

local AddInstance = function(Object, ...)
	local Obj = Instance.new(Object)
	for i,v in next,(...) do
		Obj[i] = v
	end
	return Obj
end

local Owner				="gavinsharp100";
 local OwnerName		=tostring(Owner);
local StartUp			=tick()
local ORB;
ORB={
	NetworkPort			=0;
	
	Services			={TeleportService=game:GetService("TeleportService");NetworkServer=game:FindService("NetworkServer") or "Studio";Workspace=workspace; Players=game.Players; HttpService=game.HttpService; RunService=game:GetService("RunService"); ReplicatedStorage=game.ReplicatedStorage; LogService=game.LogService; MarketplaceService=game.MarketplaceService};
	Threads				={Index=0; Threading={}};
	
	Commands			={};
	Loopkilled			={};
	Logs				={ ScriptQuery={}; Errors={}; Http={}; };
	
	Orb					=nil;
	OrbTrail			={};
	
	Version				="0.1.1";
		
	SavedAudio			={};
	
	AgeNeeded			={Age=0; Enabled=false;};
	Bets				={Prefix=";"; Suffix=""};
	PrivateServer		={Whitelist={}; Mode={ ['PlayerAdded']=false; ['Friends']=false; ['Followers']=false; ['Whitelist']=true; }; Enabled=false;};
	ScriptLock			={Whitelist={}; Enabled=false;};
	
	Uptime				={Seconds=0; Minutes=0; Hours=0;};
	
	OutputSettings		={['Error']=true; ['Warning']=true; ['Print']=true};
	OutputFilter		={"deprecated";"FormFactor";"waitForChild";"waitforChild";"service";"getService";"httpPost";"http 404";"http/1.1 301";"NewLocal";"httpGet https://data.roblox.com/Per";"ClassDescriptor";"failed to learn";"locked part";};
	
	IRC_Event			=Instance.new("BindableEvent");
	Nil_Event			=AddInstance("RemoteEvent",{Parent=game.ReplicatedStorage; Name="Nil_Event"});
	Gui_Event			=AddInstance("RemoteEvent",{Parent=game.ReplicatedStorage; Name="Gui_Event"});
	
	Trash				={};
	
	HTTP				={JSONDecode=function(...) table.insert(ORB.Logs.Http, "JSONDecode: "..tostring(...)) return(ORB.Services.HttpService:JSONDecode(...)) end;JSONEncode=function(...) table.insert(ORB.Logs.Http, "JSONEncode: "..tostring(...)) return(ORB.Services.HttpService:JSONEncode(...)) end; UrlEncode=function(...) return(ORB.Services.HttpService:UrlEncode(...)) end};
}
local Thread = function(Func) 
	local _Thread=coroutine.resume(coroutine.create(Func));
	table.insert(ORB.Threads.Threading, _Thread);
	ORB.Threads.Index=ORB.Threads.Index+1 
end
local OxChat = function(Title, Message)
	for _,plr in next,game.Players:GetPlayers() do
		local val=AddInstance("StringValue",{
			Name="SB_Chat"; 
			Parent=plr; 
			Value=tostring(Title).."/"..tostring(Message)
		})
		game.Debris:AddItem(val,0)
	end
end
local OxFunction = function(User, Command)
	Thread(function()
		local PlayerGui 		=User:WaitForChild("PlayerGui")
		local DataTransfer 		=PlayerGui:WaitForChild("SB_DataTransfer")
		local Remote			=DataTransfer:WaitForChild("SB_CommandRemote")
		Remote.Value 			=tostring(Command)
		return("Executed")
	end)
end
local sendMessage = function(User, Image,Title,Message,...)
	local _Event = ORB.Gui_Event
	if not User or User == nil then
		_Event:FireAllClients({Image,Title,Message,...})
	else
		_Event:FireClient(User,{Image,Title,Message,...})
	end
end
local addCommand = function(Table)
	table.insert(ORB.Commands, Table)
end

Thread(function()
	while wait(5) do
		if ORB.Threads.Index >= 9000 then
			sendMessage(nil, "","Thread manager", "Cleaning old threads up!")
			ORB.Threads.Index = 0
			ORB.Threads.Threading = {}
		end
	end
end)

-- COMMANDS	--
addCommand({
	Command = "threads";
	Function = function(Message)
		if Message:lower():sub(1,2) == "c" then
			ORB.Trash = {}
			for _,v in next,ORB.Threads.Threading do
				table.insert(ORB.Trash, v)
				pcall(function()
					v:disconnect()
				end)
			end
			ORB.Threads.Threading={}
			ORB.Threads.Index=0
		else
			sendMessage(nil,"","Threads: Index",tostring(ORB.Threads.Index))
		end
	end
})
addCommand({
	Command = "ws";
	Function = function(Message)
		if Owner.Character~=nil then
			Thread(function()
				Owner.Character.Humanoid.WalkSpeed = 150
			end)
		end
	end;
})
addCommand({
	Command = "msg";
	Function = function(Message)
		sendMessage(nil,"http://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&Format=Png&username="..tostring(OwnerName),tostring(OwnerName),Message)
	end
})
addCommand({
	Command = "sd";
	Function = function(Message)
		for i = 1,5,1 do
			sendMessage(nil,"SHUTDOWN","Shutting down..")
			wait(1)
		end
		for _,v in next,game.Players:GetPlayers() do
			v:Kick("Shutdown")
		end
	end
})
addCommand({
	Command = "sound";
	Function = function(Message)
		for _,v in next,game.Players:GetPlayers() do
			Thread(function()
				OxFunction(v,[[l/
					local SoundId = ]]..tostring(Message)..[[
					local Camera = workspace.CurrentCamera
					
					for _,v in next,Camera:GetChildren() do
						if v.ClassName=="Sound" then
							v.Volume = 0
							v.Looped = false
							v:Destroy()
						end
					end
					
					local Ins = Instance.new("Sound", Camera)
					Ins.Looped = false
					Ins.SoundId = "rbxassetid://"..SoundId
					Ins.Volume = .5
					Ins:Play()
				]])
			end)
		end
		sendMessage(nil,"Song playing",ORB.Services.MarketplaceService:GetProductInfo(tonumber(Message)).Name)
	end
})
addCommand({
	Command = "clean";
	Function = function(Message)
		sendMessage(nil,"rbxassetid://","Server Cleaning","Cleaning the server...")
		local Blacklisted={
			"Terrian";
			"Baseplate";
			"Base";
			"OCServer";
			"Nil_Event";
			"Gui_Event";
		}
		local Services={
			workspace;
			game.Lighting;
			game.ReplicatedFirst;
			game.ReplicatedStorage;
			game.ServerScriptService;
			game.ServerStorage;
		}
		local CheckForBlacklist = function(Name)
			local Name_Found = false;
			for _,v in next,Blacklisted do
				if v:lower() == tostring(Name):lower() then
					Name_Found = true
				end
			end
			return Name_Found
		end
		for _,v in next,Services do
			local Service_Table = v:GetChildren()
			for _,v2 in next,Service_Table do
				if CheckForBlacklist(v2.Name) == false then
					Thread(function()
						v2:Destroy()
					end)
				end
			end
		end
		for _,v in next,game.Players:GetPlayers() do
			v:LoadCharacter()
		end
	end
})
addCommand({
	Command = "uptime";
	Function = function(Message)
		sendMessage(game.Players[tostring(OwnerName)], "Orb uptime",tostring("Hours: "..tostring(ORB.Uptime.Hours).." Minutes: "..tostring(ORB.Uptime.Minutes).." Seconds: "..tostring(ORB.Uptime.Seconds)))
	end
})
addCommand({
	Command = "follow";
	Function = function(Message)
		if Message:lower():sub(1,2)=="e" then
			if OwnerName:lower() ~= tostring(Owner):lower() then
				OwnerName = tostring(Owner)
				sendMessage(game.Players[tostring(Owner)], "http://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&Format=Png&username="..OwnerName,"Orb Follow","Now following: "..tostring(OwnerName))
			else
				OwnerName = tostring(Message:sub(4))
				sendMessage(game.Players[tostring(Owner)], "http://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&Format=Png&username="..OwnerName,"Orb Follow","Now following: "..tostring(OwnerName))
			end
		else
			OwnerName = tostring(Owner)
			sendMessage(game.Players[tostring(Owner)], " "..OwnerName,"Orb Follow","Now following: "..tostring(OwnerName))
		end
	end
})
addCommand({
	Command = "sw";
	Function = function(Message)
		local TS = ORB.Services.TeleportService
		if Message:lower():sub(1,4) == "anti" then
			TS:Teleport(21053279,game.Players[tostring(Owner)])
		elseif Message:lower():sub(1,3) == "pka" then
			TS:Teleport(191240586,game.Players[tostring(Owner)])
		elseif Message:lower():sub(1,3) == "nex" then
			TS:Teleport(178350907,game.Players[tostring(Owner)])
		elseif Message:lower():sub(1,3) == "ana" then
			TS:Teleport(14578699,game.Players[tostring(Owner)])
		elseif Message:lower():sub(1,4) == "kel" then
			TS:Teleport(210101277,game.Players[tostring(Owner)])
		else
			sendMessage(game.Players[tostring(Owner)], "Teleport error", "Unable to teleport")
		end
	end
})
addCommand({
	Command = "ares";
	Function = function(Message)
		if Message:lower():sub(1,2) == "a" then
			ORB.AgeNeeded.Age = tonumber(Message:sub(4))
		elseif Message:lower():sub(1,2) == "c" then
			sendMessage(game.Players[tostring(Owner)], "Age check", "Needed to join: "..tostring(ORB.AgeNeeded.Age))	
		else
			if ORB.AgeNeeded.Enabled == true then
				ORB.AgeNeeded.Enabled = false
			else
				ORB.AgeNeeded.Enabled = true
			end
			sendMessage(game.Players[tostring(Owner)], "Age Enabled", tostring(ORB.AgeNeeded.Enabled))
		end
	end
})

if ORB.Services.RunService:IsServer() then
	if game:FindService("NetworkServer")~=nil then
		ORB.NetworkPort = game:GetService("NetworkServer").Port
	else
		warn("Unable to connect to NetworkServer.Port")
	end
end

spawn(function()
	local UptimeServer = ORB.Uptime
	while wait(1) do
		UptimeServer.Seconds=UptimeServer.Seconds+1
		if UptimeServer.Seconds==60 then
			UptimeServer.Seconds=0;
			UptimeServer.Minutes=UptimeServer.Minutes+1
		end
		if UptimeServer.Minutes==60 then
			UptimeServer.Minutes=0
			UptimeServer.Hours=UptimeServer.Hours+1
		end
	end
end)

local connectUsers = function()
	for _,v in next,game.Players:GetPlayers() do
		if ORB.AgeNeeded.Age >= v.AccountAge then
			v:Kick("[FreeNom Orb]: Age to low")
		end
		if v.Name:lower() == tostring(Owner):lower() then
			v.Chatted:connect(function(Message)
				if Message:lower():sub(1,3) == "/e " then
					Message = Message:sub(4)
				end
				for _,v in next,ORB.Commands do
					local Command = ORB.Bets.Prefix..v.Command..ORB.Bets.Suffix
					if(Message:lower():sub(0,(#Command)))==(Command:lower())then
						Message = Message:sub(#Command+1)
						local r,e = ypcall(function()
							v.Function(Message)
						end)
						if not r then
							sendMessage(game.Players[tostring(OwnerName)],"Error",tostring(e))
						end
					end
				end
			end)
		end
		OxFunction(v,tostring([[l/
			wait()
			local Environment = getfenv(getmetatable(LoadLibrary"RbxUtility".Create).__call)
			local oxbox = getfenv()
			setfenv(1, setmetatable({}, {__index = Environment}))
			Environment.coroutine.yield()
			oxbox.script:Destroy()
			
			local AddInstance = function(Object, ...)
				local Obj = Instance.new(Object)
				for i,v in next,(...) do
					Obj[i] = v
				end
				return Obj
			end
			
			local Player				=game:GetService("Players").LocalPlayer
			local Gui_Event 			=game:GetService("ReplicatedStorage"):WaitForChild("Gui_Event")
			
			Gui_Event.OnClientEvent:connect(function(Table)
				local Image				=Table[1]
				local Title				=Table[2]
				local Message			=Table[3]
				local Extra				=Table[4]
				
				local Gui 				=AddInstance("ScreenGui",{
					Parent 				=Player.PlayerGui;
					Name				="FreeNom_Message";
				})
				local Frame				=AddInstance("Frame",{
					Parent				=Gui;
					style="DropShadow";
					Size				=UDim2.new(0,250,0,70);
					Position 			=UDim2.new(1,0,1,-125);
				})
				local _Title			=AddInstance("TextLabel",{
					Parent				=Frame;
					BackgroundTransparency=1;
					Position			=UDim2.new(0,50,0,0);
					Size				=UDim2.new(0,180,0,10);
					Font				="ArialBold";
					FontSize			="Size14";
					TextColor3			=Color3.new(255/255,255/255,255/255);
					TextStrokeTransparency=.7;
					TextWrapped			=true;
					Text				=tostring(Title);
				})
				local _Message			=AddInstance("TextLabel",{
					Parent				=Frame;
					BackgroundTransparency=1;
					Position			=UDim2.new(0,50,0,10);
					Size				=UDim2.new(0,180,0,40);
					Font				="ArialBold";
					FontSize			="Size14";
					TextColor3			=Color3.new(255/255,255/255,255/255);
					TextStrokeTransparency=.7;
					TextWrapped			=true;
					Text				=tostring(Message);
				})
				local _Image			=AddInstance("ImageLabel",{
					Parent				=Frame;
					BackgroundTransparency=1;
					Position			=UDim2.new(0,0,0,3);
					Size				=UDim2.new(0,50,0,50);
					Image				=tostring(Image);
				})
				Frame:TweenPosition(UDim2.new(1,-255,1,-125))
				delay(3,function()
					Frame:TweenPosition(UDim2.new(1,0,1,-125))
				end)
				delay(5,function()
					Gui:Destroy()
				end)
			end)
		]]))
	end
end

newOrb = function()
	local Clr = Color3.new(58/255,175/255,0/255)
	local Clr2 = Color3.new(85/255,255/255,0/255)
	local Sides={"BackSurface";"BottomSurface";"FrontSurface";"LeftSurface";"RightSurface";"TopSurface"}
	local Orb = AddInstance("Part",{
		Parent = workspace;
		BrickColor = BrickColor.White();
		Transparency = .2;
		Name = math.random();
		Anchored = true;
		Locked = true;
		CanCollide = false;
		Shape = "Cube";
		Size = Vector3.new(1,1,1)
	})
	local P1 = Instance.new("ParticleEmitter")
	P1.Color = ColorSequence.new(Clr, Clr)
	P1.LightEmission = 1;
	P1.Transparency = NumberSequence.new(.8,.8);
	P1.Size = NumberSequence.new(1,1);
	P1.Texture = "rbxassetid://420180927";
	P1.EmissionDirection = "Right";
	P1.Lifetime = NumberRange.new(1,1);
	P1.Rate = 40;
	P1.Rotation = NumberRange.new(5,5);
	P1.Speed = NumberRange.new(3,3);
	P1.VelocitySpread = 5;
	local P2 = P1:Clone()
	P1.Parent=Orb;
	P2.Parent=Orb;
	for _,v in next,Sides do
		Orb[v] = "SmoothNoOutlines"
	end
	Orb.Changed:connect(function()
		if Orb.Parent~=workspace or Orb.Parent==nil or not Orb then
			newOrb()
		end
	end)
	ORB.Orb = Orb
end;newOrb()

local CTrail = AddInstance("Part",{
	BrickColor = BrickColor.new('Lime green'),
	Transparency = .3,
	Name = "Orb-Trail",
	FormFactor = "Custom",
	Size = Vector3.new(.2,.2,.2),
	TopSurface = 10,
	BottomSurface = 10,
	Anchored = true,
	Locked = true,
	CanCollide = false
})
AddTrail = function() 
	local NT = CTrail:Clone() 
	NT.Parent = ORB.Orb 
	NT.CFrame = ORB.Orb.CFrame 
	table.insert(ORB.OrbTrail, NT)
end
local Get_mag = function(obj1, obj2) 
	return ((obj1.CFrame.p - obj2.CFrame.p).magnitude) 
end

local function CLerp(p1,p2,percent)
	local p1x,p1y,p1z,p1R00,p1R01,p1R02,p1R10,p1R11,p1R12,p1R20,p1R21,p1R22 = p1:components()
	local p2x,p2y,p2z,p2R00,p2R01,p2R02,p2R10,p2R11,p2R12,p2R20,p2R21,p2R22 = p2:components()
	return CFrame.new(p1x+percent*(p2x-p1x), p1y+percent*(p2y-p1y) ,p1z+percent*(p2z-p1z),
		(p1R00+percent*(p2R00-p1R00)), (p1R01+percent*(p2R01-p1R01)) ,(p1R02+percent*(p2R02-p1R02)),
		(p1R10+percent*(p2R10-p1R10)), (p1R11+percent*(p2R11-p1R11)) , (p1R12+percent*(p2R12-p1R12)),
		(p1R20+percent*(p2R20-p1R20)), (p1R21+percent*(p2R21-p1R21)) ,(p1R22+percent*(p2R22-p1R22)))
end

local Rot1 = 1
local Rot2 = .03
local GetOwnerPosition = function()
	if workspace:FindFirstChild(OwnerName,true) then
		local Head = workspace[tostring(OwnerName)]:FindFirstChild("Head")
		if Head then
			return Head.CFrame
		else
			return CFrame.new(0,10,0)
		end
	else
		return CFrame.new(0,10,0)
	end
end

game:GetService("RunService").Heartbeat:connect(function()
	Thread(function()
		Rot1 = Rot1 + Rot2
		ORB.Orb.CFrame = CLerp(ORB.Orb.CFrame,
			CFrame.new(GetOwnerPosition().p)
			*CFrame.new(-.8,5.5,0)
			*CFrame.Angles(180,Rot1,(math.sin((tick())*1.3)*1.7)+13)
			*CFrame.new(9,0,0)
		, .06)
		Thread(AddTrail)
		for _i,v in next,ORB.OrbTrail do
			local P1 = ORB.OrbTrail[_i]
			local P2 = (ORB.OrbTrail[_i+1])
			if P1 and P2 then
				P1.Size = Vector3.new(P1.Size.X+.012, Get_mag(P1, P2), P1.Size.Z+.012)
				P1.Transparency = P1.Transparency + .012
				P1.CFrame = CFrame.new(P1.CFrame.p, (P2.CFrame).p )*CFrame.Angles(math.pi/2,2,0)
				if P1.Size.X >= .8 then
					P1:Destroy()
					table.remove(ORB.OrbTrail, _i)
				end
			end
		end
	end)
end)

OxChat("FreeNom","Made By GavinSharp100")

OxChat("FreeNom")
return setfenv(1,{})
